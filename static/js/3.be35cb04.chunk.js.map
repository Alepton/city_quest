{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","c","item","src","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","requiredField","MyPosts","memo","postsElement","posts","map","p","postsBlock","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","edidMode","setEdidMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","discriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUsersProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.be35cb04.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />\n    }\n  }\n\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__RN_mG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3J6Ah\",\"posts\":\"MyPosts_posts__3gVTf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__23Qdb\",\"item\":\"Post_item__2jRaW\"};","import React from \"react\";\r\nimport c from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={c.item}>\r\n      <img src=\"https://avatarko.ru/img/kartinka/9/igra_multfilm_minion_Hitman_8973.jpg\" />\r\n      { props.message }\r\n      <div>\r\n        <span>like</span> { props.likesCount}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  requiredField,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormControls/FormControls\";\r\nimport c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Yuor post\"\r\n          name={\"newPostText\"}\r\n          component={Textarea}\r\n          validate={[requiredField, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n/*\r\nclass MyPosts extends Component {\r\n  //спрашивает у компонента: если следующие пропсы и следующий стэйт не равны текущим, то делай рендер (если равны то компонент не переисовывается)\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps != this.props || nextState != this.state;\r\n  }\r\n  то же самое можно сделать если использовать PureComponent\r\n  class MyPosts extends PureComponent\r\n  в этом случае все будет автоматически\r\n  */\r\n\r\n    let postsElement = props.posts.map((p) => (\r\n      <Post message={p.message} likesCount={p.likesCount} />\r\n    ));\r\n\r\n    let newPostEl = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n      <div className={c.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={c.posts}>{postsElement}</div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator,\r\n  updateNewPostTextActionCreator,\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport c from \"./ProfileInfo.module.css\";\n\nconst ProfileStatusWithHooks = (props) => {\n\n  /*\n  let stateWithSetState = useState (false);\n  let edidMode = stateWithSetState [0];\n  let setEdidMode = stateWithSetState [1];\n  ниже записана та же сама логика, только деструктурированная\n  */\n\n  let [edidMode, setEdidMode] = useState (false);\n  let [status, setStatus] = useState (props.status);\n\n  useEffect ( () => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEdidMode(true);\n  }\n\n  const deActivateEditMode = () => {\n    setEdidMode(false);\n    props.updateStatus(status);\n  }\n\n  const onStatusChahge = (e) => {\n    setStatus(e.currentTarget.value);\n  }\n\n    return (\n      <div>\n        { !edidMode &&\n          <div>\n            <span onDoubleClick={activateEditMode} >{props.status || \"No status\"} </span>\n          </div>\n        }\n        {edidMode &&\n          <div>\n            <input\n                   onChange={onStatusChahge}\n                   autoFocus={true}\n                   onBlur={deActivateEditMode}\n                   value={status}\n                   />\n          </div>\n        }\n      </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport c from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (profile, status, updateStatus) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"profileInfo\">\r\n        <div>\r\n          <img src=\"https://snova-prazdnik.ru/wp-content/uploads/2015/03/kvest_real_01-1440x564_c.jpg\"></img>\r\n        </div>\r\n\r\n        <div className={c.discriptionBlock}>\r\n          <img src={profile.photos.large} />\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport c from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <div>\r\n        <MyPostsContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport { connect } from \"react-redux\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Profile from \"./Profile\";\r\nimport c from \"./Profile.module.css\";\r\nimport { getUsersProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUsersProfile(userId);\r\n    this.props.getStatus(userId)\r\n  }\r\n\r\n  render() {\r\n\r\n    return <Profile {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus} />;\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n/* было\r\nlet WithUrlDataConteinerComponent = withRouter (AuthRedirectComponent);\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nexport default connect (mapStateToProps, {getUsersProfile}) (WithUrlDataConteinerComponent);\r\n*/\r\n\r\n//стало\r\nexport default compose(\r\n  connect (mapStateToProps, {getUsersProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n  //withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}