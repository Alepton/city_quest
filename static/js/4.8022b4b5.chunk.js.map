{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","path","id","className","c","dialog","name","Messages","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","requiredField","Dialogs","dialogsPage","dialogsElement","dialogs","map","d","messagesElement","messages","m","Message","newMessageBody","dialogItem","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qJCG1KC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SAGRE,EAAmB,SAACC,GAAe,IAExCC,EAFuC,4JAG3C,WACE,OAAKC,KAAKC,MAAMN,OACT,cAACG,EAAD,eAAeE,KAAKC,QADI,cAAC,IAAD,CAAUC,GAAI,eAJJ,GAEbC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,0FCJ5DM,EAVI,SAACJ,GAClB,IAAIK,EAAO,YAAcL,EAAMM,GAC/B,OACE,qBAAKC,UAAWC,IAAEC,OAAlB,SACE,cAAC,IAAD,CAASR,GAAII,EAAb,SAAoBL,EAAMU,UCAjBC,EAJE,SAACX,GACd,OAAO,qBAAKO,UAAWC,IAAEI,QAAlB,SAA4BZ,EAAMY,W,yCCCvCC,EAAcC,YAAiB,IAoBtBC,cAAU,CAACC,KAAM,2BAAjBD,EAlBQ,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,YAAa,qBACbV,KAAM,iBACNW,UAAWC,IACXC,SAAU,CAACC,IAAeX,OAG9B,8BACE,kDCgCOY,EArCC,SAACzB,GACf,IAAIP,EAAQO,EAAM0B,YAEdC,EAAiBlC,EAAMmC,QAAQC,KAAI,SAACC,GAAD,OACrC,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMJ,GAAIwB,EAAExB,QAE9ByB,EAAkBtC,EAAMuC,SAASH,KAAI,SAACI,GAAD,OACvC,cAACC,EAAD,CAAUtB,QAASqB,EAAErB,aAEFnB,EAAM0C,eAe3B,OAAKnC,EAAMN,OAGT,sBAAKa,UAAWC,IAAEoB,QAAlB,UACE,qBAAKrB,UAAWC,IAAE4B,WAAlB,SAA+BT,IAC/B,qBAAKpB,UAAWC,IAAEwB,SAAlB,SACE,8BAAMD,MAER,cAAC,EAAD,CAAgBd,SAZA,SAACoB,GACnBrC,EAAMsC,YAAYD,EAAOF,sBAGD,cAAC,IAAD,CAAUlC,GAAI,Y,wBChB3BsC,sBACbpC,aAfoB,SAACV,GACrB,MAAO,CACLiC,YAAajC,EAAMiC,gBAIE,SAACc,GACxB,MAAO,CACLF,YAAa,SAACH,GACZK,EAASC,YAAmBN,SAOhCvC,IAFa2C,CAGbd","file":"static/js/4.8022b4b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__15rWu\",\"dialogItem\":\"Dialogs_dialogItem__3kH4I\",\"dialog\":\"Dialogs_dialog__156nF\",\"messages\":\"Dialogs_messages__2s07T\",\"message\":\"Dialogs_message__BGapH\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n      return <Component {...this.props} />\n    }\n  }\n\n\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectedAuthRedirectComponent;\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport c from \"./../Dialogs.module.css\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={c.dialog}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  );\n};\n\n\nexport default DialogItem;\n","import React from \"react\";\nimport c from \"./../Dialogs.module.css\";\n\n\nconst Messages = (props) => {\n    return <div className={c.message}>{props.message}</div>;\n};\n\nexport default Messages;\n","import React from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\nimport { Textarea } from \"../common/FormControls/FormControls\";\n\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          placeholder={\"Enter yoyr message\"}\n          name={\"newMessageBody\"}\n          component={Textarea}\n          validate={[requiredField, maxLength50]}\n        />\n      </div>\n      <div>\n        <button>Send</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm)\n","import React from \"react\";\nimport c from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Messages from \"./Message/Message\";\nimport {\n  sendMessageCreator,\n  updateNewMessageBodyCreator,\n  updateNewPostTextActionCreator,\n} from \"../../redux/dialogs-reducer\";\nimport { Redirect } from \"react-router\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormControls/FormControls\";\nimport { maxLengthCreator, requiredField } from \"../../utils/validators/validators\";\nimport AddMessageForm from \"./AddMessageForm\";\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  let dialogsElement = state.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} />\n  ));\n  let messagesElement = state.messages.map((m) => (\n    <Messages message={m.message} />\n  ));\n  let newMessageBody = state.newMessageBody;\n\n  let onSendMessageClick = () => {\n    props.sendMessage();\n  };\n\n  let onNewMessageChange = (e) => {\n    let body = e.target.value;\n    props.updateNewMessageBody(body);\n  };\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\n\n  return (\n    <div className={c.dialogs}>\n      <div className={c.dialogItem}>{dialogsElement}</div>\n      <div className={c.messages}>\n        <div>{messagesElement}</div>\n      </div>\n      <AddMessageForm onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport c from \"./Dialogs.module.css\";\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n}\n\nexport default compose (\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}